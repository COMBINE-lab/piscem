[package]
name = "piscem"
version = "0.10.0"
edition = "2021"
build = "build.rs"
repository = "https://github.com/COMBINE-lab/piscem"

[build-dependencies]
cmake = "0.1.50"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
num_cpus = "1.16.0"
anyhow = "1.0.86"
clap = { version = "4.5.8", features = ["cargo", "derive", "env", "wrap_help"] }
tracing = "0.1.40"
tracing-subscriber = { version = "0.3.18", default-features = true, features = ["env-filter"] }
prepare_fasta = "0.1.0"

[profile.release]
lto = "thin"
opt-level = 3

# generated by 'cargo dist init'
[profile.dist]
inherits = "release"

# Config for 'cargo dist'
[workspace.metadata.dist]
# The preferred cargo-dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.17.0"
# The installers to generate for each app
installers = ["shell"]
# Target platforms to build apps for (Rust target-triple syntax)
targets = ["aarch64-apple-darwin", "x86_64-apple-darwin", "x86_64-unknown-linux-gnu"]
# The archive format to use for non-windows builds (defaults .tar.xz)
unix-archive = ".tar.gz"
# CI backends to support
ci = "github"
# Publish jobs to run in CI
pr-run-mode = "plan"
# Whether to install an updater program
install-updater = true
## since this is cross-language and 
## we are not including C++ debug 
## symbols, this currently doesn't work 
## and would be of limited utility anyway.
# debug = true
# split-debuginfo = "packed"

[[workspace.metadata.dist.extra-artifacts]]
artifacts = ["source_recursive.tar.gz"]
build = ["bash", "scripts/git-archive-all.sh", "--format", "tar.gz", "--prefix", "piscem/", "source_recursive.tar.gz"]

[workspace.metadata.dist.github-custom-runners]
aarch64-apple-darwin = "macos-14"

[workspace.metadata.dist.dependencies.homebrew]
autoconf = { version="2.72", stage = ["build", "run"], targets = ["aarch64-apple-darwin"] }
automake = { version="1.16.5", stage = ["build", "run"], targets = ["aarch64-apple-darwin"] }
coreutils = { stage = ["build"] }
gnu-tar = { stage = ["build"] }
